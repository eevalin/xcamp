#include <bits/stdc++.h>
using namespace std;

bool safe(int row, int col, int n, vector<vector<int>>& board){
  for (int i = 0; i < row; i++) if (board[i][col] == 1) return false;
  int i = row - 1;
  int j = col - 1;
  while (i >= 0 && j >= 0){
    if (board[i][j] == 1) return false;
    i--;
    j--;
  }
  i = row - 1;
  j = col + 1;
  while (i >= 0 && j < n){
    if (board[i][j] == 1) return false;
    i--;
    j++;
  }
  return true;
}

void solve(int row, int n, vector<vector<int>>& board, int& count){
  if (row == n){
    count++;
    return;
  }
  for (int col = 0; col < n; col++){
    if (safe(row, col, n, board)){
      board[row][col] = 1;
      solve(row + 1, n, board, count);
      board[row][col] = 0;
    }
  }
}

int main(){
  int n;
  cin >> n;
  int count = 0;
  vector<vector<int>> board (n, vector<int>(n, 0));
  solve(0, n, board, count);
  cout << count;
}
