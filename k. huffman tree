from heapq import heappush, heappop
from collections import deque
n = int(input())
w = [[int(x), [], []] for x in input().split()]
pq = []
for i in range(n):
  heappush(pq, w[i])
while len(pq) >= 2:
  #print(pq)
  l = heappop(pq)
  r = heappop(pq)
  #print(l)
  #print(r)
  heappush(pq, [l[0] + r[0], l, r])
root = heappop(pq)
#print(root)
s = 0
dq = deque()
dq.append((root, 0))
while dq:
  #print(7)
  cur, step = dq.popleft()
  if len(cur[1]) == 0 and len(cur[2]) == 0:
    s += step * cur[0]
  else:
    if len(cur[1]) > 0:
      dq.append((cur[1], step + 1))
    if len(cur[2]) > 0:
      dq.append((cur[2], step + 1))
print(s)
