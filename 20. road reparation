#include <bits/stdc++.h>
using namespace std;

int main(){
  int n, m;
  cin >> n >> m;
  vector<vector<pair<long long, long long>>> tree (n);
  for (int i = 0; i < m; i++){
    long long a, b, c;
    cin >> a >> b >> c;
    a--, b--;
    tree[a].push_back(make_pair(b, c));
    tree[b].push_back(make_pair(a, c));
  }
  priority_queue<vector<long long>> pq;
  pq.push({0, 0});
  vector<bool> vis (n, false);
  long long ans = 0;
  while (!pq.empty()){
    long long cur = pq.top()[1];
    long long weight = -pq.top()[0];
    pq.pop();
    if (vis[cur]) continue;
    vis[cur] = true;
    ans += weight;
    for (int i = 0; i < tree[cur].size(); i++){
      if (!vis[tree[cur][i].first]){
        pq.push({-tree[cur][i].second, tree[cur][i].first});
      }
    }
  }
  bool flag = true;
  for (bool v : vis){
    if (!v){
      flag = false;
      cout << "IMPOSSIBLE";
      break;
    }
  }
  if (flag) cout << ans;
}
