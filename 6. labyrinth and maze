#include <bits/stdc++.h>
using namespace std;

int main(){
  int n;
  cin >> n;
  vector<vector<int>> g (n, vector<int>(n));
  for (int i = 0; i < n; i++) for (int j = 0; j < n; j++) cin >> g[i][j];
  //vector<vector<bool>> visited (n, vector<bool>(n, false));
  queue<vector<int>> q;
  queue<vector<vector<bool>>> visited;
  q.push({0, 0, 1});
  vector<vector<bool>> temp (n, vector<bool>(n, false));
  temp[0][0] = true;
  visited.push(temp);
  int best = -1;
  int count = 0;
  while (q.size() > 0){
    vector<int> a = q.front();
    int x = a[0];
    int y = a[1];
    int step = a[2];
    vector<vector<bool>> v = visited.front();
    visited.pop();
    //cout << x << " " << y << " " << step << '\n';
    q.pop();
    if (x == n - 1 && y == n - 1){
      if (best == -1){
        best = step;
        count++;
      }
      else if (step == best) count++;
      else if (step > best) break;
    }
    vector<int> dx = {0, 0, 1, -1};
    vector<int> dy = {-1, 1, 0, 0};
    for (int i = 0; i < 4; i++){
      int nx = x + dx[i];
      int ny = y + dy[i];
      if (nx >= 0 && nx < n && ny >= 0 && ny < n && !v[nx][ny] && g[nx][ny] == 0){
        q.push({nx, ny, step + 1});
        v[nx][ny] = true;
        visited.push(v);
      }
    }
  }
  cout << count << '\n' << best;
}
