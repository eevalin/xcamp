#include <bits/stdc++.h>
using namespace std;

int main(){
  int n, m;
  cin >> m >> n;
  vector<vector<char>> grid (n, vector<char>(m));
  int startx = 0;
  int starty = 0;
  for (int i = 0; i < n; i++){
    for (int j = 0; j < m; j++){
      char c;
      cin >> c;
      grid[i][j] = c;
      if (c == '@'){
        startx = i;
        starty = j;
      }
    }
  }
  int count = 0;
  queue<pair<int, int>> q;
  q.push(make_pair(startx, starty));
  vector<vector<bool>> visited(n, vector<bool>(m, false));
  visited[startx][starty] = true;
  while (q.size() > 0){
    int curx = q.front().first;
    int cury = q.front().second;
    q.pop();
    count++;
    vector<vector<int>> d = {{-1, 0}, {1, 0}, {0, 1}, {0, -1}};
    for (int i = 0; i < 4; i++){
        int newx = curx + d[i][0];
        int newy = cury + d[i][1];
        if (newx >= 0 && newx < n && newy >= 0 && newy < m && grid[newx][newy] != '#' && !visited[newx][newy]){
          visited[newx][newy] = true;
          q.push(make_pair(newx, newy));
        }
      
    }
  }
  cout << count;
}
